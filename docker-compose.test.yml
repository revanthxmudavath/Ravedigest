# Docker Compose configuration for testing
version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      POSTGRES_DB: test_db
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - test_pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  collector:
    build:
      context: .
      dockerfile: services/collector/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      # Override for test environment
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: test-key-for-integration
      NOTION_API_KEY: test-notion-key
      NOTION_DB_ID: test-db-id
      LOG_LEVEL: INFO
    ports:
      - "8001:8001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8001/collector/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  analyzer:
    build:
      context: .
      dockerfile: services/analyzer/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: test-key-for-integration
      NOTION_API_KEY: test-notion-key
      NOTION_DB_ID: test-db-id
      LOG_LEVEL: INFO
    ports:
      - "8002:8002"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8002/analyzer/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  composer:
    build:
      context: .
      dockerfile: services/composer/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: test-key-for-integration
      NOTION_API_KEY: test-notion-key
      NOTION_DB_ID: test-db-id
      LOG_LEVEL: INFO
    ports:
      - "8003:8003"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8003/compose/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  notion-worker:
    build:
      context: .
      dockerfile: services/notion_worker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test_password_123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: test-key-for-integration
      NOTION_API_KEY: test-notion-key
      NOTION_DB_ID: test-db-id
      LOG_LEVEL: INFO
    ports:
      - "8004:8004"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8004/notion/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  scheduler:
    build:
      context: .
      dockerfile: services/scheduler/Dockerfile
    depends_on:
      collector:
        condition: service_healthy
      composer:
        condition: service_healthy
    environment:
      COLLECTOR_URL: http://collector:8001
      COMPOSER_URL: http://composer:8003
      ANALYZER_URL: http://analyzer:8002
      NOTION_WORKER_URL: http://notion-worker:8004
      SCHEDULER_DAILY_TIME: "01:20"  # Test time
      SCHEDULER_HTTP_TIMEOUT: 30
      SCHEDULER_STATUS_TIMEOUT: 15
      LOG_LEVEL: INFO
    ports:
      - "8005:8005"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8005/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

volumes:
  test_pgdata: