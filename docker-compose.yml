services:
  
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8586:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    
  collector:
    build: 
      context: .
      dockerfile: services/collector/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    
    env_file:
      - .env
    ports:
      - "8001:8001"
    restart: unless-stopped

  analyzer:
    build: 
      context: .
      dockerfile: services/analyzer/Dockerfile
    
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    
    env_file:
      - .env
    ports:
      - "8002:8002"
    restart: unless-stopped
    volumes:
      - ./:/app
  
  composer:
    build:
      context: .
      dockerfile: services/composer/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    
    env_file:
      - .env
    ports:
      - "8003:8003"
    restart: unless-stopped
    

volumes:
  pgdata:
  
  